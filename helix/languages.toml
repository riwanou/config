# ---------
# LSPs
# ---------

# - Python lsp -

[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]

[language-server.ruff]
command = "ruff-lsp"
config = { settings = { run = "onSave" } }

# - Biome lsp -

[language-server.biome]
command = "biome"
args = ["lsp-proxy"]

# - EFM prettier lsp -

[language-server.efm-lsp-prettier]
command = "efm-langserver"

[language-server.efm-lsp-prettier.config]
documentFormatting = true

[language-server.efm-lsp-prettier.config.languages]
typescript = [{ formatCommand = "prettierd --stdin-filepath ${INPUT}", formatStdin = true }]
javascript = [{ formatCommand = "prettierd --stdin-filepath ${INPUT}", formatStdin = true }]
typescriptreact = [{ formatCommand = "prettierd --stdin-filepath ${INPUT}", formatStdin = true }]
javascriptreact= [{ formatCommand = "prettierd --stdin-filepath ${INPUT}", formatStdin = true }]
svelte= [{ formatCommand = "prettierd --stdin-filepath ${INPUT}", formatStdin = true }]

# - ESlint -

[language-server.eslint]
args = ["--stdio"]
command = "vscode-eslint-language-server"

[language-server.eslint.config]
validate = "on"
experimental = { useFlatConfig = false }
rulesCustomizations = []
run = "onType"
problems = { shortenToSingleLine = false }
nodePath = ""

[language-server.eslint.config.codeAction.showDocumentation]
enable = true

# - Tailwind -

[language-server.tailwindcss-ls]
args = ["--stdio"]
command = "tailwindcss-language-server"

# - Clang -

[language-server.clangd]
# config = { fallbackFlags = ["-std=c++17"] }
config = { fallbackFlags = ["-x", "c"] }

# - Rust analyzer -

[language-server.rust-analyzer]
config = { checkOnSave = { command = "clippy" }, cargo = { features = "all" } }

# - Glasglow WGSL lsp

[language-server.glasgow]
command = "glasgow"

# ---------
# Languages
# --------

# - Python -

[[language]]
name = "python"
auto-format = true
language-servers = ["pyright", "ruff"]

# - Rust -

[[language]]
name = "rust"
text-width = 80

# - WGSL -

[[language]]
name = "wgsl"
auto-format = true
text-width = 80
language-servers = ["glasgow"]

# - Golang -

[[language]] 
name = "go" 

# - CPP -

[[language]]
name = "cpp"
# auto-format = true

# - C -

[[language]]
name = "c"
auto-format = true

# - Typescript -

[[language]]
name = "typescript"
auto-format = false
language-servers = [
 { name = "efm-lsp-prettier", only-features = ["format"] },
 "eslint",
 "typescript-language-server"
]

[[language]]
name = "tsx"
language-servers = [
 { name = "efm-lsp-prettier", only-features = ["format"] },
 "eslint",
 "typescript-language-server"
]

# - Javascript -

[[language]]
name = "javascript"
auto-format = true
language-servers = [
 # { name = "efm-lsp-prettier", only-features = ["format"] },
 # "eslint",
 { name = "typescript-language-server", except-features = ["format"] },
 "biome"
]

[[language]]
name = "jsx"
language-servers = [
 { name = "efm-lsp-prettier", only-features = ["format"] },
 "eslint",
 "typescript-language-server"
]

# - JSON -

[[language]]
name = "json"
auto-format = false

# - CSS -

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }
auto-format = false

# - Markdown -

[[language]]
name = "markdown"

# - Svelte -

[[language]]
name = "svelte"
auto-format = true
language-servers = ["eslint", "svelteserver", "tailwindcss-ls"]

# - Promela -

[[language]]
name = "promela"
scope = "source.pml"
file-types = ["pml"]
comment-token = "//"
roots = []
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "promela"
source.path = "/Users/coefficriwan/dev/promela-tools/tree-sitter-promela"
# source = { git = "https://github.com/riwanou/tree-sitter-promela", rev = "af244775d4bf8e47452467b7c77fcd9a5a24c04d" }
# source = { git = "https://github.com/siraben/tree-sitter-promela", rev = "91da8f141c3c4c695eb71018c8a7b2e7ea39c167" }

# - Godot -

[language-server.godot]
command = "nc" 
args = [ "127.0.0.1", "6005"]

[[language]]
name = "gdscript"
language-servers = [ "godot" ]
